import logging
import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

from api import get_rating, get_summary
from kino_scraper import scrape_kinopoisk, scrape_upcoming_movies
from logger import log_interaction
from api import get_random_film

load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∏–ª—å–º–∞—Ö. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã: /rating, /summary, /kinopoisk, /randomfilm"
    await update.message.reply_text(response)
    log_interaction(update, response)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ñ–∏–ª—å–º–∞
async def rating(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = " ".join(context.args)
    response = get_rating(query)
    await update.message.reply_text(response)
    log_interaction(update, response)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞
async def summary(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = " ".join(context.args)
    response = get_summary(query)
    await update.message.reply_text(response)
    log_interaction(update, response)
async def randomfilm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = get_random_film()
    await update.message.reply_text(response)
    log_interaction(update, response)
# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞ –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ
async def kinopoisk(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = " ".join(context.args)
    response = scrape_kinopoisk(query)
    await update.message.reply_text(response)
    log_interaction(update, response)

# –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ñ–∏–ª—å–º–æ–≤
async def upcoming(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = scrape_upcoming_movies()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ñ–∏–ª—å–º–æ–≤
    await update.message.reply_text(response)
    log_interaction(update, response)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("randomfilm", randomfilm))
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("rating", rating))
app.add_handler(CommandHandler("summary", summary))
app.add_handler(CommandHandler("kinopoisk", kinopoisk))
app.add_handler(CommandHandler("upcoming", upcoming))  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ñ–∏–ª—å–º–æ–≤

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app.run_polling()